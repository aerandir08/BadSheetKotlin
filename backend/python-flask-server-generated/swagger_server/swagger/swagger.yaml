openapi: 3.0.1
info:
  title: BadSheet API
  description: Backend for the app BadSheet to get team and player information from
    turnier.de
  version: 0.0.1
servers:
- url: http://62.113.204.221/v1
paths:
  /teams:
    get:
      summary: Returns a list of all teams.
      operationId: teams_get
      responses:
        "200":
          description: A JSON array of all teams.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Team'
                x-content-type: application/json
      x-openapi-router-controller: swagger_server.controllers.default_controller
    post:
      summary: Updates the list of teams in the backend.
      operationId: teams_post
      responses:
        "202":
          description: All teams are updated.
      x-openapi-router-controller: swagger_server.controllers.default_controller
  /players/{teamname}:
    get:
      summary: Returns all players of a team.
      operationId: players_teamname_get
      parameters:
      - name: teamname
        in: path
        description: Name of the team.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: A JSON array of all players.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Player'
                x-content-type: application/json
      x-openapi-router-controller: swagger_server.controllers.default_controller
components:
  schemas:
    Team:
      required:
      - id
      - name
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
      example:
        name: name
        id: 0
    Player:
      required:
      - name
      - sex
      type: object
      properties:
        name:
          type: string
        sex:
          type: string
          enum:
          - male
          - female
      example:
        sex: male
        name: name

